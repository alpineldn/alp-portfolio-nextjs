
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[3].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[13].oneOf[3].use[2]!./node_modules/next/font/local/target.css?{"path":"src/app/(app)/layout.tsx","import":"","arguments":[{"src":[{"path":"../../../public/fonts/neue-montreal/PPNeueMontreal-Variable.woff2","weight":"100 900"},{"path":"../../../public/fonts/neue-montreal/PPNeueMontreal-Variable.woff","weight":"100 900"},{"path":"../../../public/fonts/neue-montreal/PPNeueMontreal-Variable.ttf","weight":"100 900"}],"variable":"--font-ppneuemontreal"}],"variableName":"ppNeueMontreal"} ***!

@font-face {
font-family: '__ppNeueMontreal_a467ff';
src: url(/_next/static/media/61aa5cb366892c2f-s.p.woff2) format('woff2');
font-display: swap;
font-weight: 100 900;
}

@font-face {
font-family: '__ppNeueMontreal_a467ff';
src: url(/_next/static/media/1e01a585ef0c7ad1-s.p.woff) format('woff');
font-display: swap;
font-weight: 100 900;
}

@font-face {
font-family: '__ppNeueMontreal_a467ff';
src: url(/_next/static/media/e0cb19dfefbc4589-s.p.ttf) format('truetype');
font-display: swap;
font-weight: 100 900;
}@font-face {font-family: '__ppNeueMontreal_Fallback_a467ff';src: local("Arial");ascent-override: 105.13%;descent-override: 26.56%;line-gap-override: 0.00%;size-adjust: 91.13%
}.__className_a467ff {font-family: '__ppNeueMontreal_a467ff', '__ppNeueMontreal_Fallback_a467ff'
}.__variable_a467ff {--font-ppneuemontreal: '__ppNeueMontreal_a467ff', '__ppNeueMontreal_Fallback_a467ff'
}

/*!***********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[12].use[2]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[13].oneOf[12].use[3]!./src/app/(app)/globals.css ***!
  \***********************************************************************************************************************************************************************************************************************************************************************/
/*
! tailwindcss v3.4.4 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}
  /* html {
    @apply scroll-smooth;
  } */
  body {
  margin: 0px;
  cursor: wait;
  overflow: hidden;
  --tw-bg-opacity: 1;
  background-color: rgb(20 20 20 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: none;
    -webkit-font-smoothing: subpixel-antialiased;
    -webkit-font-smoothing: antialiased;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
.container {
  width: 100%;
  padding-right: 1rem;
  padding-left: 1rem;
}
@media (min-width: 640px) {

  .container {
    max-width: 640px;
    padding-right: 2rem;
    padding-left: 2rem;
  }
}
@media (min-width: 768px) {

  .container {
    max-width: 768px;
  }
}
@media (min-width: 1024px) {

  .container {
    max-width: 1024px;
    padding-right: 4rem;
    padding-left: 4rem;
  }
}
@media (min-width: 1280px) {

  .container {
    max-width: 1280px;
    padding-right: 5rem;
    padding-left: 5rem;
  }
}
@media (min-width: 1536px) {

  .container {
    max-width: 1536px;
    padding-right: 100px;
    padding-left: 100px;
  }
}
.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}
.prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.prose :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}
.prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}
.prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}
.prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}
.prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.prose :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: none;
}
.prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: start;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: top;
}
.prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.prose :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.prose :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}
.prose :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}
.prose-invert {
  --tw-prose-body: var(--tw-prose-invert-body);
  --tw-prose-headings: var(--tw-prose-invert-headings);
  --tw-prose-lead: var(--tw-prose-invert-lead);
  --tw-prose-links: var(--tw-prose-invert-links);
  --tw-prose-bold: var(--tw-prose-invert-bold);
  --tw-prose-counters: var(--tw-prose-invert-counters);
  --tw-prose-bullets: var(--tw-prose-invert-bullets);
  --tw-prose-hr: var(--tw-prose-invert-hr);
  --tw-prose-quotes: var(--tw-prose-invert-quotes);
  --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
  --tw-prose-captions: var(--tw-prose-invert-captions);
  --tw-prose-kbd: var(--tw-prose-invert-kbd);
  --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
  --tw-prose-code: var(--tw-prose-invert-code);
  --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
  --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
  --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
  --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
}
.underline_link {
  position: relative;
  z-index: 1;
  margin: 0px;
  display: flex;
  cursor: pointer;
  flex-direction: row;
  align-items: center;
  overflow: hidden;
  background-color: transparent;
  padding-top: 5px;
  padding-bottom: 5px;
  transition-timing-function: cubic-bezier(0.76, 0, 0.24, 1);
}
.underline_link::before {
  position: absolute;
  bottom: 0px;
  left: 0px;
  display: block;
  height: 2px;
  width: 0px;
  --tw-content: '';
  content: var(--tw-content);
}
.underline_link::after {
  position: absolute;
  bottom: 0px;
  right: 0px;
  display: block;
  height: 2px;
  width: 0px;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  transition-timing-function: cubic-bezier(0.76, 0, 0.24, 1);
  --tw-content: '';
  content: var(--tw-content);
  transition: width 0.3s;
}
.underline_link:hover::before {
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  transition-timing-function: cubic-bezier(0.76, 0, 0.24, 1);
  content: var(--tw-content);
  transition: width 0.3s;
}
.underline_link:hover::after {
  width: 100%;
  background-color: transparent;
  content: var(--tw-content);
  transition: width 0.3s;
}
.pointer-events-none {
  pointer-events: none;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.inset-0 {
  inset: 0px;
}
.bottom-0 {
  bottom: 0px;
}
.bottom-14 {
  bottom: 3.5rem;
}
.bottom-\[15\%\] {
  bottom: 15%;
}
.left-0 {
  left: 0px;
}
.left-2\/4 {
  left: 50%;
}
.left-\[-10\%\] {
  left: -10%;
}
.left-\[-10vw\] {
  left: -10vw;
}
.left-\[-99px\] {
  left: -99px;
}
.right-0 {
  right: 0px;
}
.top-0 {
  top: 0px;
}
.top-1\/2 {
  top: 50%;
}
.top-2\/4 {
  top: 50%;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-30 {
  z-index: 30;
}
.z-50 {
  z-index: 50;
}
.z-\[15\] {
  z-index: 15;
}
.z-\[1\] {
  z-index: 1;
}
.z-\[3\] {
  z-index: 3;
}
.col-span-12 {
  grid-column: span 12 / span 12;
}
.m-0 {
  margin: 0px;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.mb-14 {
  margin-bottom: 3.5rem;
}
.mb-\[100px\] {
  margin-bottom: 100px;
}
.mb-\[200px\] {
  margin-bottom: 200px;
}
.mb-section-md {
  margin-bottom: 113px;
}
.mb-xs {
  margin-bottom: 32px;
}
.mr-10 {
  margin-right: 2.5rem;
}
.mr-\[10px\] {
  margin-right: 10px;
}
.mt-2 {
  margin-top: 0.5rem;
}
.mt-20 {
  margin-top: 5rem;
}
.mt-3 {
  margin-top: 0.75rem;
}
.mt-\[100px\] {
  margin-top: 100px;
}
.mt-auto {
  margin-top: auto;
}
.mt-section {
  margin-top: 96px;
}
.mt-sm {
  margin-top: 65px;
}
.box-border {
  box-sizing: border-box;
}
.block {
  display: block;
}
.inline-block {
  display: inline-block;
}
.flex {
  display: flex;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.aspect-\[16\/12\] {
  aspect-ratio: 16/12;
}
.aspect-auto {
  aspect-ratio: auto;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.size-2 {
  width: 0.5rem;
  height: 0.5rem;
}
.size-5 {
  width: 1.25rem;
  height: 1.25rem;
}
.size-6 {
  width: 1.5rem;
  height: 1.5rem;
}
.h-2 {
  height: 0.5rem;
}
.h-4\/5 {
  height: 80%;
}
.h-5 {
  height: 1.25rem;
}
.h-\[1550\%\] {
  height: 1550%;
}
.h-\[20vw\] {
  height: 20vw;
}
.h-\[350px\] {
  height: 350px;
}
.h-\[45px\] {
  height: 45px;
}
.h-\[80px\] {
  height: 80px;
}
.h-auto {
  height: auto;
}
.h-fit {
  height: -moz-fit-content;
  height: fit-content;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.max-h-\[2rem\] {
  max-height: 2rem;
}
.max-h-\[65vh\] {
  max-height: 65vh;
}
.max-h-\[876px\] {
  max-height: 876px;
}
.min-h-screen {
  min-height: 100vh;
}
.w-2 {
  width: 0.5rem;
}
.w-3\/12 {
  width: 25%;
}
.w-4\/5 {
  width: 80%;
}
.w-5 {
  width: 1.25rem;
}
.w-\[100px\] {
  width: 100px;
}
.w-\[120\%\] {
  width: 120%;
}
.w-\[120vw\] {
  width: 120vw;
}
.w-\[400px\] {
  width: 400px;
}
.w-\[45px\] {
  width: 45px;
}
.w-\[60px\] {
  width: 60px;
}
.w-\[80px\] {
  width: 80px;
}
.w-auto {
  width: auto;
}
.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}
.w-full {
  width: 100%;
}
.w-screen {
  width: 100vw;
}
.max-w-5xl {
  max-width: 64rem;
}
.max-w-\[100px\] {
  max-width: 100px;
}
.max-w-\[15rem\] {
  max-width: 15rem;
}
.max-w-\[700px\] {
  max-width: 700px;
}
.max-w-none {
  max-width: none;
}
.max-w-screen-lg {
  max-width: 1024px;
}
.table-auto {
  table-layout: auto;
}
.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-y-10 {
  --tw-translate-y: -2.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-y-\[10\%\] {
  --tw-translate-y: -10%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-y-\[2px\] {
  --tw-translate-y: -2px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-x-\[15\%\] {
  --tw-translate-x: 15%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-5 {
  --tw-translate-y: 1.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-\[25px\] {
  --tw-translate-y: 25px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-\[80px\] {
  --tw-translate-y: 80px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.scale-0 {
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.scale-110 {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.scale-75 {
  --tw-scale-x: .75;
  --tw-scale-y: .75;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.scale-\[\.65\] {
  --tw-scale-x: .65;
  --tw-scale-y: .65;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.cursor-pointer {
  cursor: pointer;
}
.resize {
  resize: both;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.flex-row {
  flex-direction: row;
}
.flex-col {
  flex-direction: column;
}
.flex-col-reverse {
  flex-direction: column-reverse;
}
.flex-wrap {
  flex-wrap: wrap;
}
.place-items-center {
  place-items: center;
}
.items-end {
  align-items: flex-end;
}
.items-center {
  align-items: center;
}
.justify-end {
  justify-content: flex-end;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.gap-2 {
  gap: 0.5rem;
}
.gap-2\.5 {
  gap: 0.625rem;
}
.gap-4 {
  gap: 1rem;
}
.gap-5 {
  gap: 1.25rem;
}
.gap-7 {
  gap: 1.75rem;
}
.gap-\[15px\] {
  gap: 15px;
}
.gap-\[3vw\] {
  gap: 3vw;
}
.gap-\[40px\] {
  gap: 40px;
}
.gap-\[70px\] {
  gap: 70px;
}
.gap-x-20 {
  -moz-column-gap: 5rem;
       column-gap: 5rem;
}
.gap-x-\[23px\] {
  -moz-column-gap: 23px;
       column-gap: 23px;
}
.gap-y-20 {
  row-gap: 5rem;
}
.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-y-16 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(4rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(4rem * var(--tw-space-y-reverse));
}
.space-y-20 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(5rem * var(--tw-space-y-reverse));
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}
.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}
.overflow-auto {
  overflow: auto;
}
.\!overflow-hidden {
  overflow: hidden !important;
}
.overflow-hidden {
  overflow: hidden;
}
.text-ellipsis {
  text-overflow: ellipsis;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.whitespace-pre {
  white-space: pre;
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-\[0_0_50\%_50\%\] {
  border-radius: 0 0 50% 50%;
}
.rounded-\[50\%\] {
  border-radius: 50%;
}
.rounded-full {
  border-radius: 9999px;
}
.border {
  border-width: 1px;
}
.border-y {
  border-top-width: 1px;
  border-bottom-width: 1px;
}
.border-b {
  border-bottom-width: 1px;
}
.border-t {
  border-top-width: 1px;
}
.border-solid {
  border-style: solid;
}
.border-gray {
  --tw-border-opacity: 1;
  border-color: rgb(80 80 80 / var(--tw-border-opacity));
}
.border-y-gray {
  --tw-border-opacity: 1;
  border-top-color: rgb(80 80 80 / var(--tw-border-opacity));
  border-bottom-color: rgb(80 80 80 / var(--tw-border-opacity));
}
.border-b-gray {
  --tw-border-opacity: 1;
  border-bottom-color: rgb(80 80 80 / var(--tw-border-opacity));
}
.border-b-white\/50 {
  border-bottom-color: rgb(255 255 255 / 0.5);
}
.border-t-white\/50 {
  border-top-color: rgb(255 255 255 / 0.5);
}
.bg-\[\#141516\] {
  --tw-bg-opacity: 1;
  background-color: rgb(20 21 22 / var(--tw-bg-opacity));
}
.bg-\[white\] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}
.bg-black\/70 {
  background-color: rgb(0 0 0 / 0.7);
}
.bg-dark {
  --tw-bg-opacity: 1;
  background-color: rgb(20 20 20 / var(--tw-bg-opacity));
}
.bg-darkGray {
  --tw-bg-opacity: 1;
  background-color: rgb(17 17 17 / var(--tw-bg-opacity));
}
.bg-transparent {
  background-color: transparent;
}
.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}
.bg-noise {
  background-image: url('/images/Dissolve_Noise_Texture.jpg');
}
.from-blue-500 {
  --tw-gradient-from: #3b82f6 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(59 130 246 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.to-purple-600 {
  --tw-gradient-to: #9333ea var(--tw-gradient-to-position);
}
.bg-cover {
  background-size: cover;
}
.bg-center {
  background-position: center;
}
.fill-\[rgb\(41\2c 41\2c 41\)\] {
  fill: rgb(41,41,41);
}
.stroke-none {
  stroke: none;
}
.stroke-\[6\.5\] {
  stroke-width: 6.5;
}
.object-contain {
  -o-object-fit: contain;
     object-fit: contain;
}
.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}
.px-12 {
  padding-left: 3rem;
  padding-right: 3rem;
}
.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.px-\[20px\] {
  padding-left: 20px;
  padding-right: 20px;
}
.py-16 {
  padding-top: 4rem;
  padding-bottom: 4rem;
}
.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.py-section {
  padding-top: 96px;
  padding-bottom: 96px;
}
.py-xs {
  padding-top: 32px;
  padding-bottom: 32px;
}
.pb-10 {
  padding-bottom: 2.5rem;
}
.pb-5 {
  padding-bottom: 1.25rem;
}
.pb-\[100px\] {
  padding-bottom: 100px;
}
.pb-section {
  padding-bottom: 96px;
}
.pb-sm {
  padding-bottom: 65px;
}
.pb-xs {
  padding-bottom: 32px;
}
.pl-\[100px\] {
  padding-left: 100px;
}
.pt-2 {
  padding-top: 0.5rem;
}
.pt-32 {
  padding-top: 8rem;
}
.pt-4 {
  padding-top: 1rem;
}
.pt-8 {
  padding-top: 2rem;
}
.pt-\[100px\] {
  padding-top: 100px;
}
.pt-\[130px\] {
  padding-top: 130px;
}
.pt-section {
  padding-top: 96px;
}
.pt-section-xl {
  padding-top: 186px;
}
.pt-sm {
  padding-top: 65px;
}
.pt-xs {
  padding-top: 32px;
}
.text-left {
  text-align: left;
}
.text-center {
  text-align: center;
}
.font-ppneuemontreal {
  font-family: var(--font-ppneuemontreal);
}
.\!text-link-xxl {
  font-size: clamp(5rem, 5vw + 2vh, 7rem) !important;
  line-height: 1.2 !important;
  letter-spacing: 0.01em !important;
  font-weight: 400 !important;
}
.text-\[12px\] {
  font-size: 12px;
}
.text-\[14px\] {
  font-size: 14px;
}
.text-brand-text-link {
  font-size: clamp(1.2rem, 2vw + 1vh, 1.4rem);
  line-height: 1;
  letter-spacing: 0.1em;
  font-weight: 400;
}
.text-l {
  font-size: clamp(1.8rem, 3vw + 1vh, 2.8rem);
  line-height: 1.2;
  letter-spacing: 0.01em;
  font-weight: 400;
}
.text-link {
  font-size: clamp(1rem, 1.5vw + 0.5vh, 1.2rem);
  line-height: 1;
  letter-spacing: 0.03em;
  font-weight: 400;
}
.text-loading-text {
  font-size: clamp(2.5rem, 6vw + 1vh, 3rem);
  line-height: 1.2;
  letter-spacing: 0.06em;
  font-weight: 400;
}
.text-m {
  font-size: clamp(1.2rem, 2vw + 1vh, 1.9rem);
  line-height: 1.4;
  letter-spacing: 0.01em;
  font-weight: 400;
}
.text-project-meta {
  font-size: clamp(1.2rem, 2vw + 0.5vh, 1.6rem);
  line-height: 1.2;
  letter-spacing: 0.01em;
  font-weight: 400;
}
.text-s {
  font-size: clamp(1rem, 1.5vw + 0.5vh, 1.2rem);
  line-height: 1.3;
  letter-spacing: 0.01em;
  font-weight: 400;
}
.text-s-spaced {
  font-size: clamp(1rem, 1.5vw + 0.5vh, 1.2rem);
  line-height: normal;
  letter-spacing: 0.03em;
  font-weight: 400;
}
.text-section-subtitle {
  font-size: clamp(1rem, 1.5vw + 0.5vh, 1.2rem);
  line-height: 1;
  letter-spacing: 0.1em;
  font-weight: 300;
}
.text-xl {
  font-size: clamp(2.8rem, 5vw + 1vh, 3.9rem);
  line-height: 1.2;
  letter-spacing: 0.01em;
  font-weight: 400;
}
.text-xs {
  font-size: clamp(0.875rem, 1vw + 0.5vh, 1rem);
  line-height: 1.4;
  letter-spacing: 0.02em;
  font-weight: 400;
}
.text-xxl {
  font-size: clamp(3.6rem, 6vw + 1vh, 7rem);
  line-height: 1.2;
  letter-spacing: 0.01em;
  font-weight: 400;
}
.\!font-medium {
  font-weight: 500 !important;
}
.font-light {
  font-weight: 300;
}
.font-medium {
  font-weight: 500;
}
.uppercase {
  text-transform: uppercase;
}
.\!leading-none {
  line-height: 1 !important;
}
.leading-none {
  line-height: 1;
}
.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}
.text-dark {
  --tw-text-opacity: 1;
  color: rgb(20 20 20 / var(--tw-text-opacity));
}
.text-gray {
  --tw-text-opacity: 1;
  color: rgb(80 80 80 / var(--tw-text-opacity));
}
.text-lightGray {
  --tw-text-opacity: 1;
  color: rgb(136 136 136 / var(--tw-text-opacity));
}
.text-primary-active {
  --tw-text-opacity: 1;
  color: rgb(153 28 56 / var(--tw-text-opacity));
}
.text-primary-hover {
  --tw-text-opacity: 1;
  color: rgb(177 26 57 / var(--tw-text-opacity));
}
.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.opacity-0 {
  opacity: 0;
}
.mix-blend-difference {
  mix-blend-mode: difference;
}
.shadow-\[0px_60px_50px_rgba\(0\2c 0\2c 0\2c 0\.2\)\] {
  --tw-shadow: 0px 60px 50px rgba(0,0,0,0.2);
  --tw-shadow-colored: 0px 60px 50px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.drop-shadow-lg {
  --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-\[top\] {
  transition-property: top;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-\[transform\2c colors\] {
  transition-property: transform,colors;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.delay-150 {
  transition-delay: 150ms;
}
.duration-300 {
  transition-duration: 300ms;
}
.duration-500 {
  transition-duration: 500ms;
}
.ease-smooth-curve {
  transition-timing-function: cubic-bezier(0.76, 0, 0.24, 1);
}
/* .heading-xxl {
    @apply text-xxl;
  }

  .heading-xl {
    @apply text-xl;
  }

  .heading-l {
    @apply text-l;
  }

  .heading-m {
    @apply text-m;
  }

  .text-spaced-sm {
    @apply text-s-spaced;
  }

  .link-hover-xl {
    @apply px-[1rem] text-xxl;
  }

  .text-link-m {
    @apply text-m-medium;
  }

  .subtitle-md {
    @apply text-section-subtitle uppercase;
  }

  .meta-md {
    @apply text-project-meta;
  }

  .loading-text {
    @apply text-loading-text;
  } */
/* Paddings */
.section-padding-t {
  padding-top: 96px;
}
@media (min-width: 768px) {

  .section-padding-t {
    padding-top: 144px;
  }
}
.section-padding-b {
  padding-bottom: 96px;
}
@media (min-width: 768px) {

  .section-padding-b {
    padding-bottom: 144px;
  }
}
@media (min-width: 1280px) {

  .section-padding-b {
    padding-bottom: 216px;
  }
}
.bg-noise-animation::after {
  pointer-events: none;
  position: absolute;
  inset: 0px;
  height: 300%;
  content: var(--tw-content);
  width: 300%;
}
@keyframes grain {

  0%, 100% {
    content: var(--tw-content);
    transform: translate(0, 0);
  }

  10% {
    content: var(--tw-content);
    transform: translate(-5%, -10%);
  }

  20% {
    content: var(--tw-content);
    transform: translate(-15%, -20%);
  }

  30% {
    content: var(--tw-content);
    transform: translate(-5%, -10%);
  }

  40% {
    content: var(--tw-content);
    transform: translate(-15%, -20%);
  }

  50% {
    content: var(--tw-content);
    transform: translate(-5%, -10%);
  }

  60% {
    content: var(--tw-content);
    transform: translate(-15%, -20%);
  }

  70% {
    content: var(--tw-content);
    transform: translate(-5%, -10%);
  }

  80% {
    content: var(--tw-content);
    transform: translate(-15%, -20%);
  }

  90% {
    content: var(--tw-content);
    transform: translate(-5%, -10%);
  }
}
.bg-noise-animation::after {
  animation: grain 8s steps(10) infinite;
  background-image: url('/images/Dissolve_Noise_Texture.jpg');
  opacity: 0.05;
  --tw-content: '';
  content: var(--tw-content);
}
@media (max-width: 640px) {
.menu-mask-gradient {
    mask-image: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 1) 50%,
      /* No fade in the first 80% */ rgba(255, 255, 255, 0) 100%
        /* Fades out in the last 20% */
    );
    -webkit-mask-image: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 1) 50%,
      rgba(255, 255, 255, 0) 100%
    )
}
  }
::-moz-selection {
  background: gray;
}
::selection {
  background: gray;
}
/* #loading-banner-1 {
  background: url();
} */
.before\:absolute::before {
  content: var(--tw-content);
  position: absolute;
}
.before\:left-1\/2::before {
  content: var(--tw-content);
  left: 50%;
}
.before\:top-1\/2::before {
  content: var(--tw-content);
  top: 50%;
}
.before\:block::before {
  content: var(--tw-content);
  display: block;
}
.before\:h-\[2px\]::before {
  content: var(--tw-content);
  height: 2px;
}
.before\:w-\[100\%\]::before {
  content: var(--tw-content);
  width: 100%;
}
.before\:-translate-x-1\/2::before {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:-translate-y-1\/2::before {
  content: var(--tw-content);
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:translate-y-\[200\%\]::before {
  content: var(--tw-content);
  --tw-translate-y: 200%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:rotate-0::before {
  content: var(--tw-content);
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:rotate-\[-45deg\]::before {
  content: var(--tw-content);
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:bg-white::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.before\:transition-transform::before {
  content: var(--tw-content);
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.before\:duration-300::before {
  content: var(--tw-content);
  transition-duration: 300ms;
}
.before\:content-\[\'\'\]::before {
  --tw-content: '';
  content: var(--tw-content);
}
.after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}
.after\:left-1\/2::after {
  content: var(--tw-content);
  left: 50%;
}
.after\:top-1\/2::after {
  content: var(--tw-content);
  top: 50%;
}
.after\:block::after {
  content: var(--tw-content);
  display: block;
}
.after\:h-\[2px\]::after {
  content: var(--tw-content);
  height: 2px;
}
.after\:w-\[100\%\]::after {
  content: var(--tw-content);
  width: 100%;
}
.after\:-translate-x-1\/2::after {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.after\:-translate-y-1\/2::after {
  content: var(--tw-content);
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.after\:-translate-y-\[200\%\]::after {
  content: var(--tw-content);
  --tw-translate-y: -200%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.after\:rotate-0::after {
  content: var(--tw-content);
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.after\:rotate-\[45deg\]::after {
  content: var(--tw-content);
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.after\:bg-white::after {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.after\:transition-transform::after {
  content: var(--tw-content);
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.after\:duration-300::after {
  content: var(--tw-content);
  transition-duration: 300ms;
}
.after\:content-\[\'\'\]::after {
  --tw-content: '';
  content: var(--tw-content);
}
.last\:border-b:last-child {
  border-bottom-width: 1px;
}
.last\:border-b-white\/50:last-child {
  border-bottom-color: rgb(255 255 255 / 0.5);
}
.hover\:text-primary-hover:hover {
  --tw-text-opacity: 1;
  color: rgb(177 26 57 / var(--tw-text-opacity));
}
.hover\:opacity-50:hover {
  opacity: 0.5;
}
.hover\:before\:bg-white:hover::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.group:hover .group-hover\:scale-105 {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.group:hover .group-hover\:\!text-dark {
  --tw-text-opacity: 1 !important;
  color: rgb(20 20 20 / var(--tw-text-opacity)) !important;
}
.group:hover .group-hover\:text-dark {
  --tw-text-opacity: 1;
  color: rgb(20 20 20 / var(--tw-text-opacity));
}
.group:hover .group-hover\:text-primary {
  --tw-text-opacity: 1;
  color: rgb(209 34 69 / var(--tw-text-opacity));
}
.group:hover .group-hover\:text-primary-hover {
  --tw-text-opacity: 1;
  color: rgb(177 26 57 / var(--tw-text-opacity));
}
.group:hover .group-hover\:opacity-100 {
  opacity: 1;
}
.prose-h2\:text-m :is(:where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  font-size: clamp(1.2rem, 2vw + 1vh, 1.9rem);
  line-height: 1.4;
  letter-spacing: 0.01em;
  font-weight: 400;
}
.prose-p\:text-s-spaced :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  font-size: clamp(1rem, 1.5vw + 0.5vh, 1.2rem);
  line-height: normal;
  letter-spacing: 0.03em;
  font-weight: 400;
}
.prose-ul\:list-none :is(:where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  list-style-type: none;
}
.prose-li\:relative :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  position: relative;
}
.prose-li\:pl-4 :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  padding-left: 1rem;
}
.prose-li\:text-s-spaced :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  font-size: clamp(1rem, 1.5vw + 0.5vh, 1.2rem);
  line-height: normal;
  letter-spacing: 0.03em;
  font-weight: 400;
}
.prose-li\:before\:absolute :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)))::before {
  content: var(--tw-content);
  position: absolute;
}
.prose-li\:before\:left-0 :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)))::before {
  content: var(--tw-content);
  left: 0px;
}
.prose-li\:before\:top-1 :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)))::before {
  content: var(--tw-content);
  top: 0.25rem;
}
.prose-li\:before\:top-1\.5 :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)))::before {
  content: var(--tw-content);
  top: 0.375rem;
}
.prose-li\:before\:h-0 :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)))::before {
  content: var(--tw-content);
  height: 0px;
}
.prose-li\:before\:h-0\.5 :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)))::before {
  content: var(--tw-content);
  height: 0.125rem;
}
.prose-li\:before\:w-2 :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)))::before {
  content: var(--tw-content);
  width: 0.5rem;
}
.prose-li\:before\:translate-y-full :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)))::before {
  content: var(--tw-content);
  --tw-translate-y: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.prose-li\:before\:bg-gray :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)))::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(80 80 80 / var(--tw-bg-opacity));
}
@media not all and (min-width: 1024px) {

  .max-lg\:flex {
    display: flex;
  }

  .max-lg\:hidden {
    display: none;
  }

  .max-lg\:grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .max-lg\:grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }

  .max-lg\:flex-col {
    flex-direction: column;
  }

  .max-lg\:gap-y-8 {
    row-gap: 2rem;
  }

  .max-lg\:px-5 {
    padding-left: 1.25rem;
    padding-right: 1.25rem;
  }
}
@media not all and (min-width: 768px) {

  .max-md\:flex-col {
    flex-direction: column;
  }

  .max-md\:flex-col-reverse {
    flex-direction: column-reverse;
  }

  .max-md\:justify-between {
    justify-content: space-between;
  }

  .max-md\:justify-items-start {
    justify-items: start;
  }

  .max-md\:justify-items-end {
    justify-items: end;
  }

  .max-md\:border-b {
    border-bottom-width: 1px;
  }

  .max-md\:pb-8 {
    padding-bottom: 2rem;
  }

  .max-md\:pt-8 {
    padding-top: 2rem;
  }
}
@media not all and (min-width: 640px) {

  .max-sm\:mb-10 {
    margin-bottom: 2.5rem;
  }

  .max-sm\:aspect-square {
    aspect-ratio: 1 / 1;
  }

  .max-sm\:-translate-y-20 {
    --tw-translate-y: -5rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-y-0 {
    --tw-translate-y: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:transform {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:flex-col {
    flex-direction: column;
  }

  .max-sm\:flex-nowrap {
    flex-wrap: nowrap;
  }

  .max-sm\:pb-8 {
    padding-bottom: 2rem;
  }

  .max-sm\:pb-xs {
    padding-bottom: 32px;
  }

  .max-sm\:backdrop-blur-sm {
    --tw-backdrop-blur: blur(4px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
            backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  }
}
@media (min-width: 640px) {

  .sm\:block {
    display: block;
  }

  .sm\:flex {
    display: flex;
  }

  .sm\:hidden {
    display: none;
  }

  .sm\:w-\[45px\] {
    width: 45px;
  }

  .sm\:w-\[50px\] {
    width: 50px;
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:items-center {
    align-items: center;
  }

  .sm\:px-\[20px\] {
    padding-left: 20px;
    padding-right: 20px;
  }

  .sm\:px-\[43px\] {
    padding-left: 43px;
    padding-right: 43px;
  }

  .sm\:pb-section-md {
    padding-bottom: 113px;
  }

  .sm\:pl-\[6vw\] {
    padding-left: 6vw;
  }

  .sm\:before\:w-\[100\%\]::before {
    content: var(--tw-content);
    width: 100%;
  }

  .sm\:before\:translate-y-\[270\%\]::before {
    content: var(--tw-content);
    --tw-translate-y: 270%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .sm\:after\:w-\[100\%\]::after {
    content: var(--tw-content);
    width: 100%;
  }

  .sm\:after\:-translate-y-\[270\%\]::after {
    content: var(--tw-content);
    --tw-translate-y: -270%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}
@media (min-width: 768px) {

  .md\:col-span-1 {
    grid-column: span 1 / span 1;
  }

  .md\:col-span-6 {
    grid-column: span 6 / span 6;
  }

  .md\:mb-\[300px\] {
    margin-bottom: 300px;
  }

  .md\:mt-section-lg {
    margin-top: 144px;
  }

  .md\:mt-section-md {
    margin-top: 113px;
  }

  .md\:mt-sm {
    margin-top: 65px;
  }

  .md\:max-w-\[25\%\] {
    max-width: 25%;
  }

  .md\:max-w-\[50\%\] {
    max-width: 50%;
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:gap-5 {
    gap: 1.25rem;
  }

  .md\:gap-\[50px\] {
    gap: 50px;
  }

  .md\:gap-x-10 {
    -moz-column-gap: 2.5rem;
         column-gap: 2.5rem;
  }

  .md\:gap-y-48 {
    row-gap: 12rem;
  }

  .md\:stroke-\[7\] {
    stroke-width: 7;
  }

  .md\:py-section-lg {
    padding-top: 144px;
    padding-bottom: 144px;
  }

  .md\:pb-section-lg {
    padding-bottom: 144px;
  }

  .md\:pb-sm {
    padding-bottom: 65px;
  }

  .md\:pr-\[100px\] {
    padding-right: 100px;
  }

  .md\:pt-section {
    padding-top: 96px;
  }

  .md\:pt-section-lg {
    padding-top: 144px;
  }

  .md\:pt-section-md {
    padding-top: 113px;
  }

  .md\:text-l {
    font-size: clamp(1.8rem, 3vw + 1vh, 2.8rem);
    line-height: 1.2;
    letter-spacing: 0.01em;
    font-weight: 400;
  }

  .md\:even\:translate-y-\[30\%\]:nth-child(even) {
    --tw-translate-y: 30%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}
@media (min-width: 1024px) {

  .lg\:col-span-3 {
    grid-column: span 3 / span 3;
  }

  .lg\:col-span-4 {
    grid-column: span 4 / span 4;
  }

  .lg\:col-span-5 {
    grid-column: span 5 / span 5;
  }

  .lg\:flex {
    display: flex;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:max-h-\[2\.5rem\] {
    max-height: 2.5rem;
  }

  .lg\:w-9\/12 {
    width: 75%;
  }

  .lg\:max-w-7xl {
    max-width: 80rem;
  }

  .lg\:max-w-\[15rem\] {
    max-width: 15rem;
  }

  .lg\:grid-flow-col-dense {
    grid-auto-flow: column dense;
  }

  .lg\:grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .lg\:grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }

  .lg\:items-start {
    align-items: flex-start;
  }

  .lg\:justify-end {
    justify-content: flex-end;
  }

  .lg\:gap-10 {
    gap: 2.5rem;
  }

  .lg\:gap-x-10 {
    -moz-column-gap: 2.5rem;
         column-gap: 2.5rem;
  }

  .lg\:space-x-4 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1rem * var(--tw-space-x-reverse));
    margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .lg\:space-y-20 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(5rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(5rem * var(--tw-space-y-reverse));
  }

  .lg\:border-t {
    border-top-width: 1px;
  }

  .lg\:border-white\/50 {
    border-color: rgb(255 255 255 / 0.5);
  }

  .lg\:pl-\[6vw\] {
    padding-left: 6vw;
  }

  .lg\:pt-8 {
    padding-top: 2rem;
  }

  .lg\:pt-\[200px\] {
    padding-top: 200px;
  }

  .lg\:pt-\[293px\] {
    padding-top: 293px;
  }

  .lg\:pt-\[328px\] {
    padding-top: 328px;
  }

  .lg\:pt-\[45px\] {
    padding-top: 45px;
  }
}
@media (min-width: 1280px) {

  .xl\:mb-section-md {
    margin-bottom: 113px;
  }

  .xl\:mt-\[241px\] {
    margin-top: 241px;
  }

  .xl\:max-w-\[200px\] {
    max-width: 200px;
  }

  .xl\:gap-16 {
    gap: 4rem;
  }

  .xl\:stroke-\[8\] {
    stroke-width: 8;
  }

  .xl\:pb-section-xxl {
    padding-bottom: 216px;
  }

  .xl\:pt-section-xl {
    padding-top: 186px;
  }

  .xl\:text-right {
    text-align: right;
  }
}
@media (min-width: 1536px) {

  .\32xl\:col-span-2 {
    grid-column: span 2 / span 2;
  }

  .\32xl\:py-sm {
    padding-top: 65px;
    padding-bottom: 65px;
  }

  .\32xl\:pr-\[200px\] {
    padding-right: 200px;
  }
}

